{1,
{5,
{"Чухланцев А.А.",1,0,"",""},
{9,
{"Быстрый ввод текстов",1,0,"",""},
{0,
{">",0,0,"Ю",">"}
},
{0,
{"<",0,0,"Б","<"}
},
{0,
{">=",0,0,"Ю=",">="}
},
{0,
{"<=",0,0,"Б=","<="}
},
{0,
{"<>",0,0,"БЮ","<>"}
},
{0,
{"[]",0,0,"хъ","[]"}
},
{0,
{"Запрос",0,0,"Запрос","Запрос = Новый Запрос(""<?, ТекстЗапроса>"");

Запрос.УстановитьПараметр("""", <?>);

РезультатЗапроса = Запрос.Выполнить();
Выборка			 = РезультатЗапроса.Выбрать();

Пока Выборка.Следующий() Цикл
		
КонецЦикла;
"}
},
{0,
{"Контекст",0,0,"Конт","<?"""", ВыборВарианта, ""НаСервере"", ""&НаСервере"", ""НаКлиенте"", ""&НаКлиенте"">"}
},
{0,
{"Область",0,0,"Обл","#Область <?"""">	

#КонецОбласти"}
}
},
{6,
{"Оформление кода",1,0,"",""},
{0,
{"Инициалы",0,0,"тд","//<?"""", ДатаВремя, ""ДФ=dd.MM.yyyy"">
//Чухланцев А.А.
//<<Начало
<?>
//>>Окончание"}
},
{0,
{"Процедуры и функции",0,0,"пф","//////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ И ФУНКЦИИ"}
},
{0,
{"Обработчики событий",0,0,"ос","//////////////////////////////////////////////////////////////
//ОБРАБОТЧИКИ СОБЫТИЙ"}
},
{0,
{"Обработчики событий элементов формы",0,0,"осф","//////////////////////////////////////////////////////////////
//ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ"}
},
{0,
{"Выделитель",0,0,"/с","//////////////////////////////////////////////////////////////"}
},
{0,
{"Полный",0,1,"/пн","//////////////////////////////////////////////////////////////
//Чухланцев А.А.
//<?"""", ДатаВремя, ""ДФ=dd.MM.yyyy"">

#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьНачальныеНастройкиФормыСервер();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы<ИмяТаблицыФормы>

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Инициализация

Процедура УстановитьНачальныеНастройкиФормыСервер()
	
КонецПроцедуры
#КонецОбласти


#КонецОбласти




"}
}
},
{1,
{"Подключение внешних отчетов и обработок",1,0,"",""},
{0,
{"Внешний отчет",0,0,"вно","
#Область Подключение_внешнего_отчета

Функция СведенияОВнешнейОбработке() Экспорт
    
    ИмяОтчета 	= ЭтотОбъект.Метаданные().Имя; 
    Синоним 	= ЭтотОбъект.Метаданные().Синоним; 
    Синоним 	= ?(ЗначениеЗаполнено(Синоним),Синоним, ИмяОтчета);         
	Версия		= ПолучитьВерсиюОтчета();
	
	РегистрационныеДанные = Новый Структура;
    РегистрационныеДанные.Вставить(""Вид""			,""ДополнительныйОтчет""); 
	РегистрационныеДанные.Вставить(""Наименование""	, Синоним); 
	РегистрационныеДанные.Вставить(""Версия""			, Версия);
    РегистрационныеДанные.Вставить(""БезопасныйРежим"", Ложь);
    РегистрационныеДанные.Вставить(""Информация""		, ""Внешний отчет: "" + Синоним);    
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
    ДобавитьКоманду(ТаблицаКоманд, Синоним, ""СформироватьОтчет"" , ""ОткрытиеФормы"", Истина, );
        
    // Сохраним таблицу команд в параметры регистрации обработки
    РегистрационныеДанные.Вставить(""Команды"", ТаблицаКоманд);
    
    Возврат РегистрационныеДанные;
                                       
КонецФункции

Функция ПолучитьТаблицуКоманд()
    
    // Создадим пустую таблицу команд и колонки в ней
    Команды = Новый ТаблицаЗначений;

    // Как будет выглядеть описание печатной формы для пользователя
    Команды.Колонки.Добавить(""Представление"", Новый ОписаниеТипов(""Строка"")); 

    // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
    Команды.Колонки.Добавить(""Идентификатор"", Новый ОписаниеТипов(""Строка""));

    // Тут задается, как должна вызваться команда обработки
    // Возможные варианты:
    // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
    // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
    // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
    Команды.Колонки.Добавить(""Использование"", Новый ОписаниеТипов(""Строка""));

    // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
    Команды.Колонки.Добавить(""ПоказыватьОповещение"", Новый ОписаниеТипов(""Булево""));

    // Для печатной формы должен содержать строку ПечатьMXL 
    Команды.Колонки.Добавить(""Модификатор"", Новый ОписаниеТипов(""Строка""));
    Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование = ""ОткрытиеФормы"", ПоказыватьОповещение = Ложь, Модификатор = ""ПечатьMXL"")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
    НоваяКоманда.Представление = ""Внешний отчет:"" + Представление;
    НоваяКоманда.Идентификатор = Идентификатор;
    НоваяКоманда.Использование = Использование;
    НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
    НоваяКоманда.Модификатор = Модификатор;
КонецПроцедуры           

Функция ПолучитьВерсиюОтчета()

	Макет 		= ПолучитьМакет(""Версии"");
	ВерсияОтчета= Макет.Область(Макет.ВысотаТаблицы, 1).Текст;
	ДатаВерсии  = Макет.Область(Макет.ВысотаТаблицы, 2).Текст;
	
	Возврат ВерсияОтчета + "" от "" + ДатаВерсии;
КонецФункции

#КонецОбласти"}
}
},
{1,
{"Продвинутые",1,0,"",""},
{0,
{"Функция с запросом возвращающим одно значение",0,0,"Фун","// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
&НаСервере
Функция <?""Введите имя функции"">()
	
	ЗначениеВозврата = Неопределено;
	
	Запрос = Новый Запрос("""");
	
	Запрос.УстановитьПараметр("""", );
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка			 = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ЗначениеВозврата = Выборка.;			
	КонецЕсли;
	
	Возврат ЗначениеВозврата;	 
КонецФункции
"}
}
},
{1,
{"Оформление модулей",1,0,"",""},
{0,
{"Модуль формы",0,0,"модф","///////////////////////////////////////////////////////
//Чухланцев Алексей
//int_o@mail.ru
//<?"""", ДатаВремя, ""ДФ=dd.MM.yyyy"">

#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы<ИмяТаблицыФормы>
// Код процедур и функций
#КонецОбласти

#Область ОбработчикиКомандФормы
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти"}
}
}
}
}